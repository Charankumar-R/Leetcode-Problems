name: Update Lines of Code in Readme

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0" # Weekly, Sunday midnight UTC
  workflow_dispatch: # Manual trigger

jobs:
  count-lines:
    runs-on: ubuntu-latest
    env:
      HIGHLIGHT_LANGS: "Java,Python,C++,C,JavaScript,TypeScript,HTML,CSS"
      IGNORE_LANGS: "JSON,Markdown,SVG,XML,YAML,TOML,CSV,Text,Properties"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq cloc locales
          sudo locale-gen en_US.UTF-8

      - name: Run cloc
        run: |
          mkdir -p output
          cloc . --json --report-file=output/cloc-output.json --exclude-lang="${IGNORE_LANGS}"

      - name: Update README
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          format_number() {
            printf "%'d\n" "$1"
          }

          export LC_ALL="en_US.UTF-8"
          export LANG="en_US.UTF-8"

          TOTAL_LINES=$(jq '.SUM.code // 0' output/cloc-output.json)
          OTHER_LINES=0
          FORMATTED_BREAKDOWN=""

          HL=",$(echo "$HIGHLIGHT_LANGS" | tr -d ' '),"

          while read -r entry; do
            LANG=$(echo "$entry" | jq -r '.lang')
            LINES=$(echo "$entry" | jq -r '.lines')

            if [[ "$HL" == *",$LANG,"* ]]; then
              FORMATTED=$(format_number "$LINES")
              FORMATTED_BREAKDOWN+=$(printf "%-12s --> %s lines\n" "$LANG" "$FORMATTED")$'\n'
            else
              OTHER_LINES=$((OTHER_LINES + LINES))
            fi
          done < <(
            jq -c 'to_entries
              | map(select(.key != "header" and .key != "SUM"))
              | map({lang: .key, lines: .value.code})
              | map(select(.lines > 0))
              | .[]' output/cloc-output.json
          )

          if [[ $OTHER_LINES -gt 0 ]]; then
            FORMATTED_OTHER=$(format_number "$OTHER_LINES")
            FORMATTED_BREAKDOWN+=$(printf "%-12s --> %s lines\n" "Others" "$FORMATTED_OTHER")$'\n'
          fi

          FORMATTED_TOTAL=$(format_number "$TOTAL_LINES")

          CODE_BLOCK="\`\`\`
          [ LANGUAGES BREAKDOWN ]

          $FORMATTED_BREAKDOWN
          [ TOTAL LINES OF CODE: $FORMATTED_TOTAL ]
          \`\`\`"

          echo "$CODE_BLOCK" > temp_block.txt
          sed -i '/<!-- LANGUAGES BREAKDOWN START -->/,/<!-- LANGUAGES BREAKDOWN END -->/{
              //!d
              /<!-- LANGUAGES BREAKDOWN START -->/r temp_block.txt
          }' README.md
          rm temp_block.txt

          git add output/cloc-output.json README.md
          git commit -m "chore: update README with latest code stats" || echo "No changes to commit"
          git push origin HEAD
